{"version":3,"sources":["src/components/blocks/Header/HeaderStyles.js","src/utils/mapper.js","src/utils/temperature–°onversion.js","src/action/index.js","src/constants/actionTypes.js","src/components/blocks/Header/Header.js","src/components/blocks/Loaction/LoactionStyles.js","src/components/blocks/Loaction/Loaction.js","src/components/blocks/Weather/WeatherStyles.js","src/components/blocks/Weather/Weather.js","src/components/blocks/Error/ErrorStyles.js","src/components/blocks/Error/Error.js","src/screens/MainScreen/MainScreenStyles.js","src/screens/MainScreen/MainScreen.js","src/components/controls/Item/ItemStyle.js","src/components/controls/editModal/EditModalStyle.js","src/components/controls/editModal/EditModal.js","src/components/controls/Item/Item.js","src/screens/HistoryScreen/HistoryScreenStyles.js","src/screens/HistoryScreen/HistoryScreen.js","src/navigation/AppNavigation.js","src/reducers/index.js","App.js","web-build/register-service-worker.js"],"names":["StyleSheet","create","header","justifyContent","alignItems","marginTop","input","textAlign","fontSize","color","width","borderStyle","borderBottomWidth","borderBottomColor","button","display","mapperForOpenWeather","response","city","name","country","sys","tempreture","temp","main","Math","floor","humidity","wind","speed","description","weather","coordinates","lat","coord","lon","lng","icon","mapperForYandexGeolocation","GeoObjectCollection","featureMember","GeoObject","setCity","text","type","payload","weatherResponseAction","data","weatherResponseFailAction","error","weatherRequest","dispatch","getState","a","async","previousRequests","fetch","api_call","json","cod","push","date","Date","console","Header","useDispatch","View","style","styles","TextInput","onChangeText","placeholder","AntDesign","size","title","onPress","loaction","Loaction","useSelector","state","Text","iconWeather","height","additionalParameter","Weather","Image","source","uri","Error","container","flex","backgroundColor","MainScreen","useState","where","setWhere","isError","useEffect","navigator","geolocation","getCurrentPosition","geoSuccess","enableHighAccuracy","timeOut","maximumAge","position","coords","latitude","longitude","geolocationResponseAction","log","currentPosition","Fragment","StatusBar","row","alignSelf","parametrs","EditModal","visible","setVisible","Modal","Button","Item","isModal","setIsModal","getDate","getMonth","getFullYear","getHours","getMinutes","HistoryScreen","SafeAreaView","FlatList","renderItem","item","keyExtractor","random","Tab","createBottomTabNavigator","AppNavigation","NavigationContainer","Navigator","Screen","component","initialState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","App","addEventListener","serviceWorker","register","scope","then","info","catch"],"mappings":"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","file":"static/js/app.14acd36c.chunk.js","sourcesContent":["import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n  header: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 30,\n  },\n  input: {\n    textAlign: 'center',\n    fontSize: 25,\n    color: '#fff',\n    width: 200,\n    borderStyle: 'solid',\n    borderBottomWidth: 2,\n    borderBottomColor: '#fff',\n  },\n  button: {\n    display: 'flex'\n  },\n});","import { calCelsius } from './temperature–°onversion'\n\nexport const mapperForOpenWeather = response => ({\n  city: response.name,\n  country: response.sys.country,\n  tempreture: calCelsius(response.main.temp),\n  humidity: response.main.humidity,\n  wind: response.wind.speed,\n  description: response.weather[0].description,\n  coordinates: { lat: response.coord.lon, lng: response.coord.lat },\n  icon: response.weather[0].icon,\n});\n\nexport const mapperForYandexGeolocation = response => response.response.GeoObjectCollection.featureMember[4].GeoObject.name;","export const calCelsius = temp => Math.floor(temp - 273.15);\n","import {\n  WEATHER_RESPONSE,\n  WEATHER_RESPONSE_FAIL,\n  SET_CITY,\n  PREVIOUS_REQUESTS,\n  GEOLOCATION_RESPONSE_FAIL,\n  GEOLOCATION_RESPONSE,\n  GEOLOCATION_CURRENT\n} from './../constants/index';\nimport {\n  mapperForOpenWeather,\n  mapperForYandexGeolocation\n} from './../utils/index';\n\nexport const setCity = text => ({\n  type: SET_CITY,\n  payload: text,\n});\n\nexport const weatherResponseAction = data => ({\n  type: WEATHER_RESPONSE,\n  payload: data,\n});\n\nexport const weatherResponseFailAction = error => ({\n  type: WEATHER_RESPONSE_FAIL,\n  payload: error,\n});\n\n\nexport const weatherRequest = () => async (dispatch, getState) => {\n  const { city, previousRequests } = getState();\n  \n  try {\n    const api_call = await fetch( `https://api.openweathermap.org/data/2.5/weather?q=${ city }&appid=b6ce763b1e16f6f845d8d595fa0efb2c` );\n    const response = await api_call.json();\n    \n    (response.cod === 200) \n      ? dispatch( weatherResponseAction( mapperForOpenWeather(response) ) ) \n      : dispatch(weatherResponseFailAction(true)); \n    \n    const { data } = getState();\n    previousRequests.push({ date: new Date(), data })\n  } catch (error) {\n    console.error('Error: ', error);\n    dispatch(weatherResponseFailAction(true));\n  }\n};\n\n// Geolocation\nexport const reverseGeocoding = () => async (dispatch, getState) => {\n  const { currentPosition } = getState();\n  //const currentPosition = { lat: 53.89, lng: 27.56, };\n  console.log('currentPosition: ', currentPosition);\n  \n  try {\n    const api_call = await fetch( `https://geocode-maps.yandex.ru/1.x/?format=json&apikey=500e65e6-b4fb-4dbc-8abf-318ac1e1cf61&geocode=${currentPosition.lat},${currentPosition.lng}&lang=en_US` );\n    const response = await api_call.json();\n    console.log(mapperForYandexGeolocation(response));\n    dispatch(setCity(mapperForYandexGeolocation(response)))\n    dispatch(weatherRequest())\n  } catch (error) {\n    dispatch(weatherResponseFailAction(true));\n  }\n};\n\nexport const setCurrentGeolocation = (position) => ({\n  type: GEOLOCATION_CURRENT,\n  payload: position\n});\n\nexport const geolocationResponseAction = (position) => ({\n  type: GEOLOCATION_RESPONSE,\n  payload: position\n});\n\nexport const geolocationResponseFailAction = (err) => ({\n  type: GEOLOCATION_RESPONSE_FAIL,\n  payload: err.message\n});","export const WEATHER_RESPONSE = 'WEATHER_RESPONSE';\nexport const WEATHER_RESPONSE_FAIL = 'WEATHER_RESPONSE_FAIL';\n\nexport const SET_CITY = 'SET_CITY';\n\nexport const GEOLOCATION_RESPONSE_FAIL = 'GEOLOCATION_RESPONSE_FAIL';\nexport const GEOLOCATION_RESPONSE = 'GEOLOCATION_RESPONSE';\nexport const GEOLOCATION_CURRENT = 'GEOLOCATION_CURRENT';","import React from 'react';\nimport { View, TextInput } from 'react-native';\nimport { useDispatch } from 'react-redux'\nimport { AntDesign } from '@expo/vector-icons'; \n\nimport styles from './HeaderStyles'; \nimport { weatherRequest, setCity } from './../../../action/index';\n\nexport const Header = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <View style={styles.header}>\n      <TextInput \n        style={styles.input}\n        onChangeText={(text) => dispatch(setCity(text))}\n        placeholder=\"–í–≤–µ–¥–∏—Ç–µ –≥–æ—Ä–æ–¥\"\n      />\n      <AntDesign \n        name=\"search1\" \n        size={24} \n        color=\"white\"\n        style={styles.button}\n        title=\"&#10003;\"\n        onPress={() => dispatch(weatherRequest())}\n      />\n    </View>\n  );\n};\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n  loaction: {\n    marginTop: 30,\n  },\n  city: {\n    color: '#fff',\n    fontSize: 32,\n    textAlign: 'center',\n  },\n  country: {\n    color: '#fff',\n    fontSize: 19,\n    textAlign: 'center',\n  },\n});","import React from 'react';\nimport { View, Text } from 'react-native';\nimport { useSelector } from 'react-redux';\n\nimport styles from './LoactionStyles';\n\nexport const Loaction = () => {\n  const city = useSelector(state => state.data.city);\n  const country = useSelector(state => state.data.country);\n  const coordinates = useSelector(state => state.data.coordinates);\n\n  return (\n    <View style={styles.loaction}>\n      {coordinates && <Text style={styles.country}>{`latitude: ${coordinates.lat}`}</Text>}\n      {coordinates && <Text style={styles.country}>{`longitude: ${coordinates.lng}`}</Text>}\n      <Text style={styles.city}>{city}</Text>\n      <Text style={styles.country}>{country}</Text>\n    </View>\n  );\n};","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n  iconWeather: {\n    width: 150, \n    height: 150,\n  },\n  weather: {\n    color: '#fff',\n    marginTop: 20,\n  },\n  description: {\n    color: '#fff',\n    fontSize: 20,\n    textAlign: 'center',\n  },\n  tempreture: {\n    color: '#fff',\n    fontSize: 48,\n    textAlign: 'center',\n  },\n  additionalParameter: {\n    color: '#fff',\n    marginTop: 20,\n    fontSize: 25,\n    textAlign: 'center',\n  },\n});","import React from 'react';\nimport { View, Text, Image } from 'react-native';\nimport { useSelector } from 'react-redux';\n\nimport styles from './WeatherStyles';\n\nexport const Weather = () => {\n  const description = useSelector(state => state.data.description);\n  const tempreture = useSelector(state => state.data.tempreture);\n  const humidity = useSelector(state => state.data.humidity);\n  const wind = useSelector(state => state.data.wind);\n  const icon = useSelector(state => state.data.icon);\n  return (\n    <View style={styles.weather}>\n      <Image \n        source={{uri: `http://openweathermap.org/img/wn/${icon}.png`,}} \n        style={styles.iconWeather}\n      /> \n      <Text style={styles.description}>{description}</Text>\n      <Text style={styles.tempreture}>{tempreture} &deg;C</Text>\n      <Text style={styles.additionalParameter}>Humidity {humidity}%</Text>\n      <Text style={styles.additionalParameter}>Wind {wind} km/h</Text>\n    </View>\n  );\n};","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n  error: {\n    textAlign: 'center',\n    fontSize: 30,\n    color: '#fff',\n  }\n});","import React from 'react';\nimport { Text } from 'react-native';\nimport styles from './ErrorStyles';\n\nexport const Error = () => ( <Text style={styles.error}>–í–≤–µ–¥–∏—Ç–µ –≥–æ—Ä–æ–¥</Text> );","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#1c9bbe',\n    alignItems: 'center',\n  },\n});","import React, { useEffect, useState } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, View } from 'react-native';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { Header } from '../../components/blocks/Header/Header';\nimport { Loaction } from '../../components/blocks/Loaction/Loaction';\nimport { Weather } from '../../components/blocks/Weather/Weather';\nimport { Error } from '../../components/blocks/Error/Error'\n\nimport { geolocationResponseAction, reverseGeocoding } from '../../action/index';\nimport styles from './MainScreenStyles';\n\nexport const MainScreen = ({}) => {\n  const dispatch = useDispatch();\n  const [where, setWhere] = useState(); \n\n  const data = useSelector(state => state.data);\n  const isError = useSelector(state => state.isError);\n\n  useEffect(() => {\n    const geoOptions = {\n        enableHighAccuracy: true,\n        timeOut: 20000,\n        maximumAge: 60 * 60 * 24\n    };\n    navigator.geolocation.getCurrentPosition( geoSuccess, geoSuccess, geoOptions);\n  }, [])\n\n  const geoSuccess = (position) => {\n    setWhere({ lat: position.coords.latitude, lng: position.coords.longitude });\n    dispatch(geolocationResponseAction(where));\n    console.log('where: ', where);\n    dispatch(reverseGeocoding());\n  }\n\n  return (\n    <View style={styles.container} >\n      <Header />\n      { isError && <Error /> }\n      { data && !isError && \n        <React.Fragment>\n          <Loaction /> \n          <Weather />\n        </React.Fragment>\n      }\n      <StatusBar style=\"auto\" />\n    </View>\n  )\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n  row: {\n    marginTop: 20,\n    backgroundColor: '#fff',\n    alignSelf: 'stretch'\n  },\n  parametrs: {\n    fontSize: 20\n  }\n});","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n  parametrs: {\n    textAlign: 'center',\n    fontSize: 20\n  },\n});","import React from 'react';\nimport { View, Text, Modal, Button } from 'react-native';\n\nimport styles from './EditModalStyle';\n\nexport const EditModal = ({visible, setVisible, data}) => {\n  return (\n    <Modal visible={visible}>\n      <View style={styles.container}>\n        <Text style={styles.parametrs}>City: {data.city}</Text>\n        <Text style={styles.parametrs}>Country: {data.country}</Text>\n        <Text style={styles.parametrs}>Description: {data.description}</Text>\n        <Text style={styles.parametrs}>Tempreture:{data.tempreture} &deg;C</Text>\n        <Text style={styles.parametrs}>Humidity: {data.humidity}</Text>\n        <Text style={styles.parametrs}>Wind: {data.wind}</Text>\n        <Button \n          title=\"Close\"\n          onPress={() => {\n            setVisible(false);\n          }}\n      />\n      </View>\n    </Modal>\n  );\n};\n","import React, { useState } from 'react';\nimport { Text, View, Button } from 'react-native';\nimport { useDispatch } from 'react-redux'\n\nimport styles from './ItemStyle';\nimport { EditModal } from '../editModal/EditModal';\nimport { setCity, weatherRequest } from '../../../action/index'\n\nexport const Item = ({ date, data }) => {\n  const dispatch = useDispatch();\n  const [isModal, setIsModal] = useState(false);\n\n  return (\n    <View style={styles.row} >\n      <EditModal visible={isModal} setVisible={setIsModal} data={data}/>\n      <Text style={styles.parametrs}>{ `Date: ${date.getDate()}.${date.getMonth()}.${date.getFullYear() }`}</Text>\n      <Text style={styles.parametrs}>{ `Time: ${date.getHours()} : ${date.getMinutes() }`}</Text>\n      <Text style={styles.parametrs}>{ `latitude:${ data.coordinates.lat } longitude:${ data.coordinates.lng }` }</Text>\n      <Text style={styles.parametrs}>{ `City: ${data.city}` }</Text>\n      <Button \n        title=\"Repeat this request\"\n        onPress={() => {\n          dispatch(setCity(data.city));\n          dispatch(weatherRequest());\n        }}\n      />\n      <Button \n        title=\"Check this request(History)\"\n        onPress={() => {\n          setIsModal(true)\n        }}\n      />\n    </View>\n  )\n}","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f26122',\n    alignItems: 'center',\n  },\n});","import React, { useEffect } from 'react';\nimport { FlatList, SafeAreaView, AsyncStorage } from 'react-native';\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { Item } from '../../components/controls/Item/Item';\n\nimport styles from './HistoryScreenStyles';\n\nexport const HistoryScreen = ({}) => {\n  const previousRequests = useSelector(state => state.previousRequests);\n\n  const renderItem = ({ item }) => (\n    <Item \n      date={item.date} \n      data={item.data}\n    />\n  );\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <FlatList \n        data={previousRequests}\n        renderItem={renderItem}\n        keyExtractor={item => `${item.data.city + item.data.coordinates.lng + Math.random() * 101}`}\n      />\n    </SafeAreaView>\n  )\n}","import React from 'react';\nimport { NavigationContainer  } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\n\nimport { MainScreen } from '../screens/MainScreen/MainScreen';\nimport { HistoryScreen } from '../screens/HistoryScreen/HistoryScreen';\n\nconst Tab = createBottomTabNavigator();\n\nexport function AppNavigation() {\n  return (\n    <NavigationContainer>\n      <Tab.Navigator>\n        <Tab.Screen name=\"Weather\" component={MainScreen} />\n        <Tab.Screen name=\"History\" component={HistoryScreen} />\n      </Tab.Navigator>\n    </NavigationContainer>\n  );\n}","import {\n  SET_CITY,\n  WEATHER_RESPONSE,\n  WEATHER_RESPONSE_FAIL,\n  GEOLOCATION_RESPONSE_FAIL,\n  GEOLOCATION_RESPONSE,\n  GEOLOCATION_CURRENT\n} from './../constants/index';\n\nconst initialState = {\n  data: null,\n  previousRequests: [],\n  currentPosition: null,\n  isError: false,\n};\n\nexport default function reducer(state = initialState, { type, payload }) {\n  switch (type) {\n    case SET_CITY: return {\n      ...state,\n      city: payload,\n    };\n\n    case WEATHER_RESPONSE: return {\n      ...state,\n      data: { ...payload },\n      isError: false,\n    };\n\n    case WEATHER_RESPONSE_FAIL: return {\n      ...state,\n      isError: payload,\n    };\n\n    case GEOLOCATION_RESPONSE_FAIL: return {\n      ...state,\n      isError: payload,\n    }\n\n    case GEOLOCATION_RESPONSE: return {\n      ...state,\n      currentPosition: payload,\n    }\n\n    case GEOLOCATION_CURRENT: return {\n      ...state,\n      previousRequests: payload,\n    }\n\n    default:\n      return state;\n  }\n}","import React, { Component } from 'react';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\n\nimport { AppNavigation } from './src/navigation/AppNavigation';\nimport reducer from './src/reducers/index';\n\nconst composeEnhancers =\n  typeof window === 'object' &&\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__   \n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n      // Specify extension‚Äôs options like name, actionsBlacklist, actionsCreators, serialize...\n    }) : compose;\n\nconst store = createStore(\n  reducer, \n  composeEnhancers(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport default function App() {\n  return (\n    <Provider store={store}>\n      <AppNavigation />\n    </Provider>\n  );\n}","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n"],"sourceRoot":""}